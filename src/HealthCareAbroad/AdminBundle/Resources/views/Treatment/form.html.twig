{% extends 'AdminBundle::layout.html.twig' %}
{% set selectedTab = 'manageHcaData' %}
{% set selectedSubMenu = 'treatments' %}
{% set treatmentsLabel = getClassLabel('treatment') %}

{% block content %}
    <div class="span3">
    {% include 'AdminBundle:Widgets:subMenu.manageHcaData.html.twig'%}
	</div>
    <div class="span9">

        {% embed 'HelperBundle:Widgets:section.html.twig' with { 
                title: ( form.vars.value.id ? 'Edit ' : 'Add ' ) ~ treatmentsLabel.singular | title ,
                actions: [{link: path('admin_treatment_index'), label: 'View all '~ treatmentsLabel.plural | title, 'icon' : 'icon-list' }]
            }
        %}
            {% block sectionContent %}

                {% include '::notice.admin.html.twig' %}
                
                <form id="treatmentForm" novalidate="novalidate" class="basic-form" action="{{ formAction }}" method="post" {{ form_enctype(form) }}>

    				{% if form.children.subSpecializations.vars.read_only %}
    				    <div>
    						{{ form_label(form.subSpecializations) }}
    						<select disabled="true" multiple="true">
    						    {% for eachSub in form.vars.value.subSpecializations %}
    						    <option>
    						        {{ eachSub.name }}
    						    </option>
    						    {%  endfor %}
    						</select>
    						
    					</div>
    				{% else %}
    				    {{ form_row(form.specialization) }}
    				    {{ form_row(form.subSpecializations) }}
    				{% endif %}
    
    				{{ form_row(form.name) }}
    				{{ form_row(form.description) }}
    				<div>
    				    {{ form_label(form.treatmentTerms) }}
    				    {{ form_widget(form.treatmentTerms) }}
    				    <a href="#addTermModal" data-toggle="modal"><small>Create new term/tag</small></a>
    				</div>
    				
    				<div class="autocompleteSelectedContainer"></div>
    				
    				{{ form_row(form.status) }}
    				
    				{{ form_rest(form) }}
    				<div class="clear"><br></div>
    			    <input type="submit" value="Save" class="btn btn-large btn-primary" name="submit"/>
                    {% if not form.vars.value.id %}
                        <input type="submit" value="Save &amp; Add another {{ treatmentsLabel.singular | title }}" class="btn btn-large" name="submit"/>
                    {% endif %}
    				
    			</form>

            {% endblock %}
        {% endembed %}
    </div>

    {% include 'AdminBundle:Terms/Widgets:modal.add.html.twig' %}
{% endblock %}

{% block inlineJavascriptCode %}
    <script src="{{ asset('bundles/admin/js/terms.js') }}"></script>
	<script src="{{ asset('bundles/log/js/EntityVersionHistory.js') }}"></script>
	<script type="text/javascript">
		$(function(){

		    EntityVersionHistory.setCommonDialog($('#dialog-container'), {});

		    $('div.modalAddTerm').terms('modalAddTerm');
		    
		    {% if form.vars.value.id %}
		    // load current terms tagged to this treatment
		    $('div.autocompleteSelectedContainer').terms('loadCurrentTerms', {
			    'url': '{{ path("admin_treatments_ajaxLoadByDocumentId", {"documentId": form.vars.value.id, "documentType": get_document_type_constant("treatment")}) }}',
			    'removeCurrentTermUrl': '{{ path("admin_treatments_ajaxDeleteByDocumentId", {"documentId": form.vars.value.id, "documentType": get_document_type_constant("treatment")}) }}'
		    });
		    {% endif %}

		    $('input.autocompleteTerms').terms('autocomplete', {
			    'remoteUrl': '{{ path("admin_terms_loadAutocompleteSource") }}',
			    'type': '{{ get_document_type_constant("treatment") }}',
			    'form': 'form#treatmentForm'
		    });

		    $('a.view-edit-history-link').click(function(){
		        EntityVersionHistory.viewHistory($(this));
		        return false;
		    });

		    $("#treatment_specialization").change(function(event){
			    _id = $(this).val();
			    _subSpecializationEl = $("#treatment_subSpecializations");
			    _subSpecializationEl.attr('disabled', true).html('<option value="0">Loading...</option>');
			    $.ajax({
				    url: '{{ path("admin_specialization_loadAvailableSubSpecializations") }}',
				    data: {id: _id, 'treatmentId': '{{ form.vars.value.id }}', 'selectedSubSpecializationIds': $.parseJSON('{{ selectedSubSpecializationIds is defined ? selectedSubSpecializationIds : "[]"  }}')},
				    type: 'get',
				    dataType: 'json',
				    success: function(json){
					    if (json.data.length > 0) {
					        _subSpecializationEl.attr('disabled', false).html(json.html);
					    } 
					    else {
					        _subSpecializationEl.attr('disabled', true).html('<option value="0">No sub specializations</option>');
					    }
				        
				    }
			    });

			    return false;
		    }).change();
		    
		});
	</script>
{% endblock %}