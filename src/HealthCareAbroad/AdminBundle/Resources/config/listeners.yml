#
# List down listeners for events dispatched in AdminBundle. Naming convention for listener is 
#    listener.{listener_class_bundle}.{subject}.{event_action}
#    
# Sample:
#    listener.mailer.admin_user.change_password
#


services:

    #
    # listeners for admin user related events
    #
    listener.log.admin_user.add: 
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.admin_user.add, method: onCommonLogAction }
    
    listener.log.admin_user.edit: 
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.admin_user.edit, method: onCommonLogAction }
            
    listener.log.admin_user.login: 
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.admin_user.login, method: onCommonLogAction }
            
    listener.log.admin_user.change_password:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.admin_user.change_password, method: onCommonLogAction }
            
    #
    # listeners for admin user type related events
    #
    listener.log.admin_user_type.add:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.admin_user_type.add, method: onCommonLogAction }
            
    listener.log.admin_user_type.edit:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.admin_user_type.edit, method: onCommonLogAction }
            
    listener.log.admin_user_type.delete:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.admin_user_type.delete, method: onCommonLogAction }
            
    listener.log.admin_user_type.add_role:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.admin_user_type.add_role, method: onCommonLogAction }
            
    listener.log.admin_user_type.delete_role:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.admin_user_type.delete_role, method: onCommonLogAction }
            
    #
    # listeners for city related events
    #
    listener.log.city.add:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.city.add, method: onCommonLogAction }
            
    listener.log.city.edit:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.city.edit, method: onCommonLogAction }
                    
    listener.log.city.delete:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.city.delete, method: onCommonLogAction }
            
    #
    # listeners for country related events
    #
    listener.log.country.add:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.country.add, method: onCommonLogAction }
            
    listener.log.country.edit:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.country.edit, method: onCommonLogAction }
                    
    listener.log.country.delete:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.country.delete, method: onCommonLogAction }
            
            
    #
    # listeners  for medical center related events
    #
    listener.log.medical_center.add:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.medical_center.add, method: onCommonLogAction }
            
    listener.log.medical_center.edit:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.medical_center.edit, method: onCommonLogAction }
                    
    listener.log.medical_center.delete:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.medical_center.delete, method: onCommonLogAction }
            
    #
    # listeners  for medical procedure related events
    #
    listener.log.medical_procedure.add:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.medical_procedure.add, method: onCommonLogAction }
            
    listener.log.medical_procedure.edit:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.medical_procedure.edit, method: onCommonLogAction }
                    
    listener.log.medical_procedure.delete:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.medical_procedure.delete, method: onCommonLogAction }
            
    #
    # listeners  for medical procedure type related events
    #
    listener.log.medical_procedure_type.add:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.medical_procedure_type.add, method: onCommonLogAction }
            
    listener.log.medical_procedure_type.edit:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.medical_procedure_type.edit, method: onCommonLogAction }
                    
    listener.log.medical_procedure_type.delete:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.medical_procedure_type.delete, method: onCommonLogAction }
    
    
    