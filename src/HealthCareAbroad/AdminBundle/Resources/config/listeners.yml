#
# List down listeners for events dispatched in AdminBundle. Naming convention for listener is
#    listener.{listener_class_bundle}.{subject}.{event_action}
#
# Sample:
#    listener.mailer.admin_user.change_password
#


services:

    #
    # listeners for admin user related events
    #
    listener.log.admin_user.add:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.admin_user.add, method: onCommonLogAction }

    listener.log.admin_user.edit:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.admin_user.edit, method: onCommonLogAction }

    listener.log.admin_user.login:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.admin_user.login, method: onCommonLogAction }

    listener.log.admin_user.change_password:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.admin_user.change_password, method: onCommonLogAction }

    #
    # listeners for admin user type related events
    #
    listener.log.admin_user_type.add:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.admin_user_type.add, method: onCommonLogAction }

    listener.log.admin_user_type.edit:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.admin_user_type.edit, method: onCommonLogAction }

    listener.log.admin_user_type.delete:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.admin_user_type.delete, method: onCommonLogAction }

    listener.log.admin_user_type.add_role:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.admin_user_type.add_role, method: onCommonLogAction }

    listener.log.admin_user_type.delete_role:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.admin_user_type.delete_role, method: onCommonLogAction }

    #
    # listeners for advertisement related events
    #
    listener.log.advertisement.add:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.advertisement.add, method: onCommonLogAction }
    listener.log.advertisement.edit:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.advertisement.edit, method: onCommonLogAction }
    listener.log.advertisement.delete:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.advertisement.delete, method: onCommonLogAction }

    #
    # listeners for city related events
    #
    listener.log.city.add:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.city.add, method: onCommonLogAction }

    listener.log.city.edit:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.city.edit, method: onCommonLogAction }

    listener.log.city.delete:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.city.delete, method: onCommonLogAction }

    #
    # listeners for state related events
    #
    listener.log.state.add:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.state.add, method: onCommonLogAction }

    listener.log.state.edit:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.state.edit, method: onCommonLogAction }

    listener.log.state.delete:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.state.delete, method: onCommonLogAction }

    #
    # listeners for country related events
    #
    listener.log.country.add:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.country.add, method: onCommonLogAction }

    listener.log.country.edit:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.country.edit, method: onCommonLogAction }

    listener.log.country.delete:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.country.delete, method: onCommonLogAction }


    #
    # listeners  for specialization related events
    #
    listener.log.specialization.add:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.specialization.add, method: onCommonLogAction }

    listener.log.specialization.edit:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.specialization.edit, method: onCommonLogAction }

    listener.log.specialization.delete:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.specialization.delete, method: onCommonLogAction }

    #
    # listeners  for treatment related events
    #
    listener.log.treatment.add:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.treatment.add, method: onCommonLogAction }

    listener.log.treatment.edit:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.treatment.edit, method: onCommonLogAction }

    listener.log.treatment.delete:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.treatment.delete, method: onCommonLogAction }

    #
    # listeners  for subspecialization related events
    #
    listener.log.subspecialization.add:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.subspecialization.add, method: onCommonLogAction }

    listener.log.subspecialization.edit:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.subspecialization.edit, method: onCommonLogAction }

    listener.log.subspecialization.delete:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.subspecialization.delete, method: onCommonLogAction }

    #
    # listeners  for news related events
    #
    listener.log.news.add:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.news.add, method: onCommonLogAction }

    listener.log.news.edit:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.news.edit, method: onCommonLogAction }

    listener.log.news.delete:
        class: HealthCareAbroad\LogBundle\Listener\Admin\AdminBundleCommonListener
        arguments: [@service_container]
        tags:
            - { name: kernel.event_listener, event: event.news.delete, method: onCommonLogAction }


