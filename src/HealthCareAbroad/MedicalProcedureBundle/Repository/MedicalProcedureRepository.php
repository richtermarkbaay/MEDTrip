<?php

namespace HealthCareAbroad\MedicalProcedureBundle\Repository;

use HealthCareAbroad\MedicalProcedureBundle\Entity\MedicalProcedure;

use HealthCareAbroad\InstitutionBundle\Entity\InstitutionMedicalProcedureType;

use Doctrine\ORM\EntityRepository;

/**
 * MedicalProcedureRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class MedicalProcedureRepository extends EntityRepository
{
	public function search($term = '', $limit = 10)
	{
		$dql = "
			SELECT p
			FROM MedicalProcedureBundle:MedicalProcedure AS p
			WHERE p.name LIKE :term
			ORDER BY p.name ASC"
		;
	
		$query = $this->_em->createQuery($dql);
		$query->setParameter('term', "%$term%");
		$query->setMaxResults($limit);
	
		return $query->getResult();
	}
	
	/**
	 * Get query builder for getting available MedicalProcedures that can be used by InstitutionMedicalProcedureType 
	 * 
	 * @param InstitutionMedicalProcedureType $institutionMedicalProcedureType
	 */
	public function getQueryBuilderForAvailableInstitutionMedicalProcedures(InstitutionMedicalProcedureType $institutionMedicalProcedureType)
	{
	    $qbInner = $this->getEntityManager()->createQueryBuilder();
	    $qbInner->select('i.id')
	        ->from('InstitutionBundle:InstitutionMedicalProcedure', 'i')
	        ->where('i.institutionMedicalProcedureType = :institutionMedicalProcedureTypeId');
	    
	    $qb = $this->getEntityManager()->createQueryBuilder();
	    $qb->select('a')
	        ->from('MedicalProcedureBundle:MedicalProcedure', 'a')
	        ->add('where', 'a.status = :active')
	        ->andWhere('a.medicalProcedureType = :medicalProcedureTypeId')
	        ->andWhere($qb->expr()->notIn('a.id', $qbInner->getDQL()))
	        ->setParameter('active', MedicalProcedure::STATUS_ACTIVE)
	        ->setParameter('medicalProcedureTypeId', $institutionMedicalProcedureType->getMedicalProcedureType()->getId())
	        ->setParameter('institutionMedicalProcedureTypeId', $institutionMedicalProcedureType->getId());
	    
	    return $qb;
	}
	
}