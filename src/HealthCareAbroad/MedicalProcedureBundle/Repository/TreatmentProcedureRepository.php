<?php

namespace HealthCareAbroad\MedicalProcedureBundle\Repository;

use Doctrine\ORM\QueryBuilder;

use Doctrine\ORM\Query\Expr\Join;

use HealthCareAbroad\MedicalProcedureBundle\Entity\TreatmentProcedure;

use HealthCareAbroad\InstitutionBundle\Entity\InstitutionTreatment;

use Doctrine\ORM\EntityRepository;

/**
 * TreatmentProcedureRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TreatmentProcedureRepository extends EntityRepository
{
	public function search($term = '', $limit = 10)
	{
		$dql = "
			SELECT p
			FROM MedicalProcedureBundle:TreatmentProcedure AS p
			WHERE p.name LIKE :term
			ORDER BY p.name ASC"
		;
	
		$query = $this->_em->createQuery($dql);
		$query->setParameter('term', "%$term%");
		$query->setMaxResults($limit);
	
		return $query->getResult();
	}
	
	public function getCountByTreatmentId($treatmentId) {
		$qb = $this->getEntityManager()->createQueryBuilder();
		$qb->select('count(a)')
	        ->from('MedicalProcedureBundle:TreatmentProcedure', 'a')
	        ->where('a.status = :active')
	        ->andWhere('a.treatment = :medicalPRocedureTypeId')
			->setParameter('active', TreatmentProcedure::STATUS_ACTIVE)
			->setParameter('medicalPRocedureTypeId', $treatmentId);
		
		$count = (int)$qb->getQuery()->getSingleScalarResult();
		
		return $count;
	}
	
	/**
	 * Get query builder for getting available TreatmentProcedures that can be used by InstitutionTreatment 
	 * 
	 * @param InstitutionTreatment $institutionTreatment
	 */
	public function getQueryBuilderForAvailableInstitutionTreatmentProcedures(InstitutionTreatment $institutionTreatment)
	{
	    /**
	     SELECT a . * , b . *
        FROM `treatment_procedures` a
        LEFT JOIN `institution_treatment_procedures` b ON a.id = b.treatment_procedure_id
        AND b.institution_treatment_id =2
        WHERE a.treatment_id =7
        AND b.id IS NULL
	     **/
	    
	    // create query builder similar to above raw sql
	    $qb = $this->getEntityManager()->createQueryBuilder();
	    $qb->select('a')
	        ->from('MedicalProcedureBundle:TreatmentProcedure', 'a')
	        ->leftJoin('a.institutionTreatmentProcedures', 'b', Join::WITH, 'b.institutionTreatment = :institutionTreatmentId')
	        ->where('a.status = :active')
	        ->andWhere('a.treatment = :treatmentId')
	        ->andWhere('b.id IS NULL')
	        ->setParameter('active', TreatmentProcedure::STATUS_ACTIVE)
	        ->setParameter('treatmentId', $institutionTreatment->getTreatment()->getId())
	        ->setParameter('institutionTreatmentId', $institutionTreatment->getId());
	    return $qb;
	}
	
}