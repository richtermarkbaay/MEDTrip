{# This requires that institution is defined in parent context. #}
{# TODO: don't preload content of tabs #}

<div id="add-media-dialog" style="display: none;" title="Select media">
    <div id="add-media-tabs">
        <ul>
            <li><a href="#preloaded-tab">From my computer</a></li>
            <li><a href="{{ path(routes.gallery_selection, {context: context, id: institution.id}) }}">From Media Gallery</a></li>
        </ul>

        <div id="preloaded-tab">
            <form name="multiUploadForm">
                <div id="uploader">
                    <p>You browser doesn't have Flash, Silverlight, Gears, BrowserPlus or HTML5 support.</p>
                </div>
            </form>

            <style type="text/css">@import url({{ asset('bundles/media/js/plupload/js/jquery.ui.plupload/css/jquery.ui.plupload.css') }});</style>

            <!-- Third party script for BrowserPlus runtime (Google Gears included in Gears runtime now) -->
            <!-- script type="text/javascript" src="http://bp.yahooapis.com/2.4.21/browserplus-min.js"></script> -->

            <!-- Load plupload and all it's runtimes and finally the jQuery UI queue widget -->

            <script type="text/javascript" src="{{ asset('bundles/media/js/plupload/js/plupload.full.js') }}"></script>
            <script type="text/javascript" src="{{ asset('bundles/media/js/plupload/js/jquery.ui.plupload/jquery.ui.plupload.js') }}"></script>

            <script type="text/javascript">

            // Convert divs to queue widgets when the DOM is ready
            $(function() {
                $("#uploader").plupload({
                    // General settings
                    /*runtimes : 'gears,flash,silverlight,browserplus,html5',*/
                    runtimes : 'html5',
                    url : '{{ path(routes.media_upload, {institutionId: institution.id, context: context}) }}',
                    max_file_size : '10mb',
                    /*chunk_size : '1mb',*/
                    unique_names : true,

                    // Resize images on clientside if we can
                    //resize : {width : 320, height : 240, quality : 90},

                    // Specify what files to browse for
                    filters : [
                        {title : "Image files", extensions : "jpg,jpeg,gif,png"},
                        {title : "Zip files", extensions : "zip"},
                        {title : "Pdf files", extensions : "pdf"},
                        {title : "Video files", extensions : "avi,mov,flv"}
                    ],

                    // Flash settings
                    //flash_swf_url : '/plupload/js/plupload.flash.swf',
                    //http://www.youtube.com/watch?v=kPIM6V9eeRE
                    // Silverlight settings
                    //silverlight_xap_url : '/plupload/js/plupload.silverlight.xap'
                });

                // Client side form validation
                $('form[name=multiUploadForm]').submit(function(e) {
                    var uploader = $('#uploader').plupload('getUploader');

                    // Files in queue upload them first
                    if (uploader.files.length > 0) {
                        // When all files are uploaded submit form
                        uploader.bind('StateChanged', function() {
                            if (uploader.files.length === (uploader.total.uploaded + uploader.total.failed)) {
                                //$('form[name=multiUploadForm]').submit();
                                $(this).submit();
                            }
                        });

                        uploader.start();
                    } else
                        alert('You must at least upload one file.');

                    return false;
                });
            });
            </script>

        </div>
    </div>
</div>


<script type="text/javascript">

$(function() {
    $("#add-media-tabs").tabs();

    $("#add-media-dialog").dialog({
        autoOpen: false,
        modal: true,
        height: 600,
        width: 800,
        open: function(event, ui) {

        },
        buttons: {
            Close: function() {
                $(this).dialog( "close" );
            }
        },
        close: function() {

        }
    });

});
</script>