<?php

namespace HealthCareAbroad\TermBundle\Repository;

use HealthCareAbroad\TreatmentBundle\Entity\Treatment;

use HealthCareAbroad\TermBundle\Entity\Term;

use HealthCareAbroad\HelperBundle\Classes\QueryOption;

use HealthCareAbroad\HelperBundle\Classes\QueryOptionBag;

use Doctrine\ORM\EntityRepository;

/**
 * TermRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TermRepository extends EntityRepository
{
    public function findByName($name, QueryOptionBag $options = null) 
    {
        if (!$options) {
            $options = new QueryOptionBag();
        }
        
        $qb = $this->getEntityManager()->createQueryBuilder();
        $qb->select('a')
            ->from('TermBundle:Term', 'a')
            ->where('a.name LIKE :name')
            ->setParameter('name', '%'.$name.'%');
        
        if ($options->has(QueryOption::LIMIT)) {
            $qb->setMaxResults($options->get(QueryOption::LIMIT));
        }
        
        $qb->orderBy('a.name', 'ASC');
        
        return $qb->getQuery()->getResult();
    }
    
    /**
     * Find term by exact name.
     * 
     * @param unknown_type $name
     * @return Term
     */
    public function findOneByName($name)
    {
        $query = $this->createQueryBuilder('a')
            ->select('a')
            ->where('a.name = :name')
            ->setParameter('name', $name)
            ->getQuery();

        return $query->getOneOrNullResult();
    }
    
    public function updateInstitutionTreatmentByTreatment(Treatment $currentTreatment, Treatment $oldTreatment)
    {
        $query = "
        INSERT INTO `institution_treatments` (`institution_specialization_id`, `treatment_id`)
        SELECT a.institution_specialization_id, ". $currentTreatment->getId() ."
        FROM  `institution_treatments` a
        LEFT JOIN (SELECT  * FROM `institution_treatments` WHERE `treatment_id` = 1233  ) as _existing
        ON _existing.`institution_specialization_id` = a.institution_specialization_id
        WHERE a.treatment_id = ". $oldTreatment->getId() ."
        AND _existing.`institution_specialization_id` IS NULL";
        
        $conn = $this->getEntityManager()->getConnection();
        $conn->executeQuery($query);
        
        $deleteQuery = "DELETE FROM institution_treatments WHERE treatment_id = ".$oldTreatment->getId();
        return $conn->executeQuery($deleteQuery);
        
    }
}