{% block fancy_country_widget %}
    {% spaceless %}
        {% set valueContainerId = form.vars.id %}
        {% set widgetId = form.vars.id~'_widget' %}
        {% set triggerId = form.vars.id~'_trigger'%}

    	{% if form.parent.vars.value.country is defined %}
            {% set countryFormValue = form.parent.vars.value.country %}
        {% elseif (strpos(getClass(form.parent.vars.value), 'AdvertisementPropertyValue') is not sameas(false)) %}
            {% set countryFormValue = form.parent.vars.value.value %}
        {% endif %}

        <div class="fancy-dropdown-wrapper _country-autocomplete">
            <input type="hidden" id="{{ valueContainerId }}" name="{{ form.vars.full_name }}" value="{{ form.vars.value }}" />
            <input required="required" type="text" id="{{ widgetId }}" placeholder="Select Country" data-autocomplete-trigger="#{{ triggerId }}" {% for key, value in attr %} {{ key }}="{{ value }}" {% endfor %}> 
            <button id="{{ triggerId }}" class="btn hca-location-btn show_list_btn" type="button">
                <span class="icon-chevron-down"></span>
            </button>
            <div class="combolist-wrapper"></div>
            
            {% set jsFiles = [asset('bundles/helper/js/fancy_autocomplete.js'), asset('bundles/helper/js/Location.js')] %}
            {{ include_js_files(jsFiles) | raw }}

            <!-- TODO: Need to move and improve js implementation -->
            <script type="text/javascript">
            (function($){
                $(function(){
                    var _inputElem = $('#{{ widgetId }}')
                	var _valueContainer = $('#{{ valueContainerId }}');
                    
                	_inputElem.fancyAutocomplete({
                        source: window.JSON.parse('{{ countries | raw }}'),
                        maxItems: 0,
                        valueContainer:  _valueContainer,
                        autocomplete: {minLength: 0},
                        onAutocompleteSelectCallback: function(widget){
                            widget.trigger('selectedCountry');
                        }
                    });
                	
                	{# there is a data for current country #}
                    {% if countryFormValue %}
                        _valueContainer.val('{{ countryFormValue.id }}');
                        _inputElem.val('{{ countryFormValue.name }}');
                    {% endif %}
                });
            })(jQuery);
            </script>

        </div>
    {% endspaceless %}
{% endblock %}

{% block city_list_widget %}
    {% spaceless %}
        {% set valueContainerId = form.vars.id %}
        {% set widgetId = form.vars.id~'_widget' %}
        {% set triggerId = form.vars.id~'_trigger'%}

    	{% if form.parent.vars.value.city is defined %}
            {% set cityFormValue = form.parent.vars.value.city %}
        {% elseif (strpos(getClass(form.parent.vars.value), 'AdvertisementPropertyValue') is not sameas(false)) %}
            {% set cityFormValue = form.parent.vars.value.value %}
        {% endif %}

        <div class="fancy-dropdown-wrapper">
            <input id="{{ valueContainerId }}" type="hidden" name="{{ form.vars.full_name }}"  value="{{ form.vars.data }}" data-elem="value">
            <input id="{{ widgetId }}" data-autocomplete-trigger="#{{ triggerId }}" type="text" {% for key, value in attr %} {{ key }}="{{ value }}" {% endfor %}  data-elem="input" disabled="disabled" data-city-autocomplete="">
            <button id="{{ triggerId }}" type="button" class="btn show_list_btn" data-elem="btn" disabled="disabled">
                <span class="icon-chevron-down"></span>
            </button>
            <div class="combolist-wrapper"></div>
        </div>
        
        <script type="text/javascript">
        (function($){
            $(function(){
                var _inputElem = $('#{{ widgetId }}')
            	var _valueContainer = $('#{{ valueContainerId }}');
                var countryDependencyElement;

            	{% if form.parent.country is defined and form.parent.country %}
                    countryDependencyElement = $('#{{ form.parent.country.vars.id }}_widget');
                    countryValueElem = $('#{{ form.parent.country.vars.id }}');
                {% endif %}

                // Finds "country input widget" className within the form.
                if(!countryDependencyElement) {
                	countryDependencyElement = _inputElem.parents('form:first').find('._country-autocomplete input[data-autocomplete-trigger]:first');
                	countryValueElem = $('#' + countryDependencyElement.attr('id').replace('_widget', ''));
                }

                Location.loadCitiesUrl = '{{ get_load_cities_api_uri() }}';
                _inputElem.fancyAutocomplete({
                    source: [],
                    maxItems: 0,
                    valueContainer:  _valueContainer,
                    autocomplete: {minLength: 0}
                });


                {% if form.parent.state is defined and form.parent.state %}
                    countryDependencyElement.on('selectedCountry', function(e){
                        var cityWidget = $('#{{ widgetId }}');
                        Location.disableWidget(cityWidget, true);
    
                        // we should reset the source here to empty
                        Location.resetWidgetValue(cityWidget);
                    });

                    var dependencyElement = $('#{{ form.parent.state.vars.id }}_widget');
                    var dependencyElementValueContainer = $('#{{ form.parent.state.vars.id }}');
                    
                    dependencyElement.on('selectedState', function(e){
                        var stateWidget = $(e.target);
                        Location.loadCities(countryValueElem.val(), $('#{{ form.parent.state.vars.id }}').val(), $('#{{ widgetId }}'), 0);
                        
                    });
    
                    if (parseInt(dependencyElementValueContainer.val())){
                        dependencyElement.trigger('selectedState');
                    }

                {% else %}
                    countryDependencyElement.on('selectedCountry', function(e){
                        Location.loadCities(countryValueElem.val(), 0, $('#{{ widgetId }}'), 0);
                    });
                    Location.loadCities(countryValueElem.val(), 0, $('#{{ widgetId }}'), 0);
                {% endif %}

                {% if cityFormValue %}
                    {#-- there is city value in form data --#}
                    $('#{{ widgetId }}').val('{{ cityFormValue.name }}');
                    $('#{{ valueContainerId }}').val('{{ cityFormValue.id }}');
                {% endif %}

            });
        })(jQuery);
        </script>
    {% endspaceless %}
{% endblock %}


{% block state_list_widget %}
    
    {% spaceless %}
        {% set valueContainerId = form.vars.id %}
        {% set widgetId = form.vars.id~'_widget' %}
        {% set triggerId = form.vars.id~'_trigger'%}
        <div class="fancy-dropdown-wrapper">
            <input id="{{ valueContainerId }}" type="hidden" name="{{ form.vars.full_name }}"  value="{{ form.vars.data }}" data-elem="value">
            <input id="{{ widgetId }}" data-autocomplete-trigger="#{{ triggerId }}" type="text" {% for key, value in attr %} {{ key }}="{{ value }}" {% endfor %} data-elem="input" disabled="disabled" >
            <button id="{{ triggerId }}" type="button" class="btn show_list_btn" data-elem="btn" disabled="disabled">
                <span class="icon-chevron-down"></span>
            </button>
            <div class="combolist-wrapper"></div>
        </div>
        
        <script type="text/javascript">
        (function($){
            $(function(){
                var _inputElem = $('#{{ widgetId }}')
            	var _valueContainer = $('#{{ valueContainerId }}');
                Location.loadStatesUrl = '{{ get_load_states_api_uri() }}';
                _inputElem.fancyAutocomplete({
                    source: [],
                    maxItems: 0,
                    valueContainer:  _valueContainer,
                    autocomplete: {minLength: 0},
                    onAutocompleteSelectCallback: function(widget){
                        widget.trigger('selectedState');
                    }
                });

                {% if form.parent.country %}
                
                    // state is dependent on country widget
                    var dependencyElement = $('#{{ form.parent.country.vars.id }}_widget');
                    var dependencyElementValueContainer = $('#{{ form.parent.country.vars.id }}');
                    
                    dependencyElement.on('selectedCountry', function(e){
                        var fancyAutocomplete = $(e.target).data('fancyAutocomplete');
                        var countryValue = fancyAutocomplete.options.valueContainer.val();
                        var widget = $('#{{ widgetId }}');
                        Location.loadStatesOfCountry(countryValue,widget, 0);
                    });

                    // country has a loaded value, trigger selctedCountry
                    if (parseInt(dependencyElementValueContainer.val())){
                        dependencyElement.trigger('selectedCountry');
                    }
    
                    {% if form.parent.vars.value.state %}
                        {#-- there is state value in form data --#}
                        /**_inputElem.on('reloadedDataSource', function(e){
                            
                            
                        });**/

                        $('#{{ widgetId }}').val('{{ form.parent.vars.value.state.name }}');
                        $('#{{ valueContainerId }}').val('{{ form.parent.vars.value.state.id }}');
                    {% endif %}
                    
                {% endif %}
            });
        })(jQuery);
        </script>
    {% endspaceless %}
{% endblock %}