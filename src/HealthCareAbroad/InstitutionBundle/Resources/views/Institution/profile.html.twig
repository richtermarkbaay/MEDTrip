{% extends 'InstitutionBundle::layout.html.twig' %}
{% set mainNavigation = {selected: 'manage profile'} %}

{% set _csrf_token_widget = form_widget(institutionForm._token) %}
{% set globalAwardClassLabel = getClassLabel('global_award') %}
{% set ancillaryServiceClassLabel = getClassLabel('ancilliary_service') %}
{% block content %}
    {% embed 'InstitutionBundle:Embed:contentWrapper.authenticated.html.twig' %}

        {% block wrappedContent %}
             <div id="back-top">
                <div class="backtotop img-rounded">
                    <a href="#top"><span><i class="icon-chevron-up"></i></span>Top</a>
                </div>
            </div>
            <!-- Main Content -->
            {% include 'InstitutionBundle:Widgets/Profile:banner.html.twig' %}

            {% if (isSingleCenter is defined) and isSingleCenter %}
                {% include 'InstitutionBundle:Institution:profile.singleCenter.html.twig' %}
            {% else %}
                {% include 'InstitutionBundle:Institution:profile.multipleCenter.html.twig' %}
            {% endif %}

            <!-- Sidebar Content -->
            {% include 'InstitutionBundle:Widgets:sidebar.base.html.twig' %}
            <!-- end Modal Institution name -->
        {% endblock %}

    {% endembed %}

{% endblock %}


{% block inlineJavascriptCode %}
<script type="text/javascript">
/* This is a quick and dirty solution. Will refactor when I get the time. (HAM)
 * TODO: move to external js file.
 */
(function() {
    var hashMatch = (function() {
        switch (window.location.hash) {
        case '#specializations':
            return { 'action': 'openTab', 'tab': 'specializations_tab', 'content': 'specializations_tab_content' };
        case '#doctors':
            return { 'action': 'openTab', 'tab': 'doctors_tab', 'content': 'doctors_tab_content' };
        case '#contact-details':
            return { 'action': 'scrollTo', 'section': 'show-contact' }
        }
        return false;
    })();

    if (hashMatch) {
        if (hashMatch.action == 'scrollTo') {
            $('html, body').animate({
                 'scrollTop': $('#' + hashMatch.section).offset().top
            }, 1000);
        } else if (hashMatch.action == 'openTab') {
            /*are the selectors unique enough?*/
            $("ul.nav-tabs > li").each(function() {
                $(this).attr('id') == hashMatch.tab ? $(this).addClass('active') : $(this).removeClass('active');
            });
            $("div#tabbed_content > div").each(function() {
                $(this).attr('id') == hashMatch.content ? $(this).addClass('active') : $(this).removeClass('active');
            });
        }
    }
})();
</script>

<script type="text/javascript" src="{{ asset('bundles/helper/js/Location.js') }}"></script>
<script type="text/javascript" src="{{ asset('bundles/institution/js/institutionProfile.js') }}"></script>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>
<script type="text/javascript" src="{{ asset('bundles/helper/js/HCAGoogleMap.js') }}"></script>
<script type="text/javascript">
<!--
    Location.loadCitiesUrl = '{{ path("helper_loadCities") }}';
    (function($){
        $(function(){
            var ajaxFormUploadElem;
            $('form.ajaxUploadLogoForm').ajaxForm({
                success: function(response) {
                   if(response.status) {
                       ajaxFormUploadElem.find('img').attr('src',response.mediaSrc).css('opacity', 1).prev().show();
                       HCA.alertMessage('success', 'Your ' + ajaxFormUploadElem.data('image-label')  + ' has been updated!');
                   } else {
                	   HCA.alertMessage('error', 'Unable to upload your ' + ajaxFormUploadElem.data('image-label')  + '!');
                   }
               }
            }).submit(function(){
               HCA.closeAlertMessage();
               ajaxFormUploadElem = $(this);
               $(this).find('img').css('opacity', 0.5).prev().hide();
            });

            $("#{{ institutionForm.getChild('medicalProviderGroups').vars.id }}_0").autocomplete({
                appendTo: "#autoDiv",
                source: $.parseJSON('{{ add_slashes(medicalProvidersJSON) | raw }}'),
            });

            var city = "{{ institution.city ? institution.city.name ~ ', ' : '' }}";
            HCAGoogleMap.initialize({
                latLngString: '{{ institution.coordinates }}',
                address: "{{ institution_address_to_array(institution, ['address1', 'city', 'state', 'country', 'zipCode'])|join(',') }}",
                defaultAddress: city + "{{ institution.country.name }}",
                mapOnChangeCallback: function() {
                	$("#{{ institutionForm.getChild('coordinates').vars.id }}").val(HCAGoogleMap.latLngString);
                }
            });
        });
    })(jQuery);

    function getAddress() {
        var address = '';
        var streetAddress = $("#{{ institutionForm.getChild('address1').vars.id }}_street").val();
        var buildingAddress = $("#{{ institutionForm.getChild('address1').vars.id }}_building").val();
        var city = $("#{{ institutionForm.getChild('city').vars.id }}_widget").val();
        //var country = $("#{{ institutionForm.getChild('country').vars.id }}");
        var country = $("#{{ institutionForm.getChild('country').vars.id }}_widget").val();

        //if(buildingAddress != '') { address += buildingAddressElem + ', '; }
        if(streetAddress != '') { address += streetAddress + ', '; }
        if(city != '') { address += city + ', '; }
        if(country != '') { address += country; }

        return address;
    }

    function updateInstitutionStaticMap() {
        HCAGoogleMap.updateMap(getAddress());
    }
</script>
{% endblock %}