{% extends 'InstitutionBundle::layout.html.twig' %}
{% set selectedTab = 'staff'%}


{% block content %}
<!-- start content -->
<div id="content">
    <!--  start page-heading -->
    <div id="page-heading">
        <h1>Edit {{ institution.getName() }} Details</h1>
    </div>
    <!-- end page-heading -->
    
    {% embed '::contentWrapper.admin.html.twig' %}
        
        {% block wrappedContent %}
            <!--  start table-content  -->
            <div id="table-content">
            
                {% include '::notice.admin.html.twig' %}
            
                <form novalidate="novalidate" action="{{ path('institution_edit_information')}}" method="POST" {{ form_enctype(form) }} class="basic-form">
                    <!-- start id-form -->
                    
                        {{ form_row(form.name) }}
                        {{ form_row(form.description) }}
                        {{ form_row(form.institutionOfferedServices) }}
                        {{ form_row(form.country) }}
                        
                        {{ form_row(form.city)}}
                        
                        {{ form_row( form.address1 ) }}
                        {{ form_row( form.address2 ) }}
                        <div>
                        <label>New Language</label>
                        <input type="text" value="" id="languageButton">             			
             			</div>
             			<div>
             			{% if institutionLanguage %}
             				<div id="tags">
	             			{% for language in institutionLanguage %}
	                			<a href="#" id="language{{ language.id }}" class="click"> {{ language.name }}</a>
                			{% endfor %}
                			</div>
                		{% else %}
                			
                		{% endif %}
                			
                		</div>
             			{{ form_row( form.institutionLanguagesSpoken ) }}
						<input type="reset" value="Reset" class="form-reset"  />
						<input type="submit" name="submit" value="Submit" class="green-button" />                        
                        {{ form_rest(form) }}
                		
                    
                    <!-- end id-form  -->
                </form>
            </div>
            <!--  end table-content  -->
        {% endblock %}
        
    {% endembed %}

</div>

<!--  end content -->
<div class="clear">&nbsp;</div>
{% endblock %}

{% block inlineJavascriptCode %}

   <script>
	$(function() {
		var availableTags = $.parseJSON('{{ languagesJSON | raw}}');

		$.each(availableTags, function(i, val){
			$("#language"+val.id).click(function() {
				
			    var currentTerms = $("#institutionDetail_institutionLanguagesSpoken").val().split(',');
			    $.each(currentTerms, function (_k, _v){
					currentTerms[_k] = $.trim(_v);    
			    });
				var text = $(this).text();	    	
				
	        	var b = $.inArray($.trim(text), currentTerms);

				if (b <0 ) {
						console.log("false no match");
					}
				else {
					currentTerms.splice(b, 1);
					
					}
				$('#institutionDetail_institutionLanguagesSpoken').val($.trim(currentTerms.join(', ')))
	 
					$(this).remove();
				return false;		
				});  
		});	
		
		var originalTags = availableTags;
		var selectedTags = [];

		function split( val ) {
	
			return val.split( /,\s*/ );
		}
		function extractLast( term ) {

			return split( term ).pop();			
		}
		function log( message , id) {
		//	console.log(id);
			$( "<a/ href='#' id='language"+id+"' class='click' >" ).text( message ).prependTo( "#tags" );
			$( "#tags" ).scrollTop( 0 );
		}
		function hidden( message ) {
			//console.log($( "<textarea/>" ).text( message ).prependTo( "#institutionDetail_institutionLanguagesSpokenn" ));
			$( message ).append( "#institutionDetail_institutionLanguagesSpoken" );
		}

		$( "#languageButton")
			// don't navigate away from the field on tab when selecting an item
			.bind("keyup", function(event){
			    
				if ( $(this).data('autocomplete').term){
				    var currentTerms = $("#institutionDetail_institutionLanguagesSpoken").val().split(',');
				    $.each(currentTerms, function(c, cval){
				        currentTerms[c] = $.trim(cval);
				    });
				    var temp = [];
				    
				    var removedSelectedTags = [];
				    $.each(selectedTags, function(i, val){
					    temp.push(val);
				    });

				    tempLength = temp.length;
				    
				    for (i=0; i<tempLength; i++) {
				        
				        if ($.inArray(temp[i].value, currentTerms) < 0) {
				            
				            $.each(selectedTags, function(x, val){
					            if (val && val.value == temp[i].value) {
					                selectedTags.splice(x,1);
					                removedSelectedTags.push(temp[i]);
					                return;
					            }
				            });
				        }
				    }
				    $.merge(availableTags, removedSelectedTags);
				}
			    
			})
			.bind( "keydown", function( event ) {
				if ( event.keyCode === $.ui.keyCode.TAB &&						
			
						$( this ).data( "autocomplete" ).menu.active ) {
					event.preventDefault();					
				}
			
			})
			.autocomplete({
				minLength: 1,
				create: function(event, ui) {
	                currentTerms = $("#institutionDetail_institutionLanguagesSpoken").val().split(',');
	                $.each(currentTerms, function(c, cval){
				        currentTerms[c] = $.trim(cval);
				    });
	                if (currentTerms.length > 0) {
		                $.each(currentTerms, function(xi, val){
		                    $.each(availableTags, function(ii, ival){
			                    if (ival && ival.value==val) {
			                        availableTags.splice(ii, 1);
			                        selectedTags.push(ival);
			                        return;
			                    }
		                    });
		                    //console.log(val);
		                });
	                }
	            },
				source: function(request, response) {
							response( $.ui.autocomplete.filter(
							availableTags, extractLast( request.term ) ) );
					},
					focus: function() {
						// prevent value inserted on focus
						return false;
					},
					select: function( event, ui ) {
				
						var terms = split( this.value );
						// remove the current input
						
						terms.pop();
						// add the selected item					
						terms.push( ui.item.value );
						log( ui.item.value , ui.item.id );
						// add placeholder to get the comma-and-space at the end
						//terms.push( "" );			
						this.value = terms.join( " " );

						add_field = $("#institutionDetail_institutionLanguagesSpoken");
						 
						add_field.val( add_field.val()  + "," + this.value );

						$( "#languageButton").val(' ');
						//alert($( "#institutionDetail_institutionLanguagesSpoken").val());
						$.each(availableTags, function(i, val){
						    if (val && val.id == ui.item.id) {
							    selectedTags.push({'value': val.value, 'id': val.id});
						        availableTags.splice(i, 1);
						        return;
						    }
						});		
						return false;
					}
			});


	});
	</script>
{% endblock %}
