<?php
namespace HealthCareAbroad\InstitutionBundle\Repository;

use HealthCareAbroad\TreatmentBundle\Entity\Treatment;

use Doctrine\ORM\EntityRepository;

/**
 * InstitutionSpecializationRepository
 *
 * This class was generated by Harold Modesto. Add your own custom
 * repository methods below.
 */
class InstitutionSpecializationRepository extends EntityRepository
{
    /**
     * InstitutionTreatmentProcedureRepository::getCountByMedicalProcedureId($treatmentProcedureId)
     *
     * @param unknown $treatmentId
     */
    public function getTreatmentCountByTreatmentId($treatmentId)
    {
        $connection = $this->getEntityManager()->getConnection();

        $sql = "
            SELECT COUNT(*)
            FROM institution_treatments AS a
            LEFT JOIN treatments AS b ON a.treatment_id = b.id
            WHERE a.treatment_id = :treatmentId
            AND b.status = :treatmentStatus
        ";

        $stmt = $connection->prepare($sql);
        $stmt->bindValue('treatmentId', $treatmentId);
        $stmt->bindValue('treatmentStatus', Treatment::STATUS_ACTIVE);

        return $stmt->fetchColumn(0);
    }

    /**
     * InstitutionTreatmentProcedureRepository::getProcedureIdsByTypeId($institutionId, $procedureTypeId)
     *
     * @param unknown $treatmentProcedureId
     * @return number
     */
    public function getTreatmentIdsBySubSpecializationId($institutionId, $subSpecializationId)
    {
        $conn = $this->_em->getConnection();

        $qry = "SELECT b.* FROM institution_treatments AS a " .
               "JOIN medical_procedures AS b ON a.medical_procedure_id = b.id " .
               "JOIN medical_procedure_types AS c ON b.medical_procedure_type_id = c.id ".
               "WHERE a.institution_id = $institutionId AND b.medical_procedure_type_id = $procedureTypeId";

        $result = $conn->executeQuery($qry)->fetchAll();

        $ids = array();
        foreach($result as $each) {
            $ids[] = (int)$each['id'];
        }

        return $ids;
    }
}