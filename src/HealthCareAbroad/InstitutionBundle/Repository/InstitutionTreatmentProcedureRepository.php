<?php

namespace HealthCareAbroad\InstitutionBundle\Repository;

use HealthCareAbroad\InstitutionBundle\Entity\InstitutionTreatmentProcedure;

use Doctrine\ORM\EntityRepository;

/**
 * InstitutionTreatmentProcedureRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InstitutionTreatmentProcedureRepository extends EntityRepository
{
	public function getCountByMedicalProcedureId($treatmentProcedureId) {
		$qb = $this->_em->createQueryBuilder();

		$qb->select('count(a)')
		->from('InstitutionBundle:InstitutionTreatmentProcedure', 'a')
		->where('a.status = :active')
		->andWhere('a.treatmentProcedure = :treatmentProcedureId')
		->setParameter('active', InstitutionTreatmentProcedure::STATUS_ACTIVE)
		->setParameter('treatmentProcedureId', $treatmentProcedureId);
	
		$count = (int)$qb->getQuery()->getSingleScalarResult();

		return $count;
	}

	public function updateStatus($id, $value = null)
	{
		$result = false;
		$procedure = $this->_em->getRepository('InstitutionBundle:InstitutionTreatmentProcedure')->find($id);

		if($procedure) {
			$status = $procedure->getStatus() == $procedure::$STATUS['active']
			? $procedure::$STATUS['inactive']
			: $procedure::$STATUS['active'];

			$procedure->setStatus($status);
			$this->_em->persist($procedure);
			$this->_em->flush($procedure);
			$result = true;
		}
	
		return $result;
	}

	function getProcedureIdsByTypeId($institutionId, $procedureTypeId)
	{
		$conn = $this->_em->getConnection();

		$qry = "SELECT b.* FROM institution_treatment_procedures AS a " .
				"JOIN medical_procedures AS b ON a.medical_procedure_id = b.id " .
				"JOIN medical_procedure_types AS c ON b.medical_procedure_type_id = c.id ".
				"WHERE a.institution_id = $institutionId AND b.medical_procedure_type_id = $procedureTypeId";

		$result = $conn->executeQuery($qry)->fetchAll();

		$ids = array();
		foreach($result as $each) {
			$ids[] = (int)$each['id'];
		}

		return $ids;
	}
}