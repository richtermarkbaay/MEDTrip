<?php

namespace HealthCareAbroad\InstitutionBundle\Repository;

use HealthCareAbroad\InstitutionBundle\Entity\InstitutionPropertyType;

use Doctrine\ORM\Query;

use HealthCareAbroad\HelperBundle\Classes\QueryOptionBag;

use HealthCareAbroad\InstitutionBundle\Entity\Institution;

use HealthCareAbroad\InstitutionBundle\Entity\InstitutionProperty;

use Doctrine\ORM\EntityRepository;

/**
 * InstitutionPropertyRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InstitutionPropertyRepository extends EntityRepository
{
    /**
     * Get all anicilliary services
     */
    public function getAllServicesByInstitution($institution)
    {
        $connection = $this->getEntityManager()->getConnection();
        $query = "SELECT * FROM institution_properties a LEFT JOIN offered_services b ON b.id = a.value WHERE a.institution_id = :id";
        $stmt = $connection->prepare($query);
        $stmt->bindValue('id', $institution->getId());
        $stmt->execute();
        
        return $stmt->fetchAll();
        
    }
    
    public function getAvailableGlobalAwardsOfInstitution(Institution $institution, QueryOptionBag $options)
    {
        $globalAwardPropertyType = $this->getEntityManager()->getRepository('InstitutionBundle:InstitutionPropertyType')->findOneBy(array('name' => InstitutionPropertyType::TYPE_GLOBAL_AWARD));
        $sql = "SELECT a.value  FROM institution_properties a WHERE a.institution_property_type_id = :propertyType AND a.institution_id = :institutionId";
        
        $statement = $this->getEntityManager()
        ->getConnection()->prepare($sql);
        
        $statement->execute(array('propertyType' => $globalAwardPropertyType->getId(), 'institutionId' => $institution->getId()));
        
        $result = array();
        $ids = array();
        if($statement->rowCount() > 0) {
            while ($row = $statement->fetch(Query::HYDRATE_ARRAY)) {
                $ids[] = $row['value'];
            }
        }
            
        $qb = $this->getEntityManager()->createQueryBuilder()
            ->select('a,b')
            ->from('HelperBundle:GlobalAward', 'a')
            ->innerJoin('a.awardingBody', 'b')
            ->where('1=1');
        
        if ($options->has('globalAward.name')) {
            $qb->andWhere('a.name LIKE :globalAwardName')
                ->setParameter('globalAwardName', '%'.$options->get('globalAward.name').'%');
        }
        
        if ($options->has('globalAward.type')) {
            $qb->andWhere('a.type = :globalAwardType')
                ->setParameter('globalAwardType', $options->get('globalAward.type'));
        }
        
        if (\count($ids)) {
            $qb->andWhere($qb->expr()->notIn('a.id', ':globalAwardIds'))
                ->setParameter('globalAwardIds', $ids);
        }
        //echo $qb->getQuery()->getSQL(); exit;
        return $qb->getQuery()->getResult();
    }
}