<?php

namespace HealthCareAbroad\UserBundle\Repository;

use Doctrine\ORM\Query\Expr\Join;

use HealthCareAbroad\InstitutionBundle\Entity\Institution;

use HealthCareAbroad\UserBundle\Entity\SiteUser;

use Doctrine\ORM\EntityRepository;

use \Exception;

/**
 * InstitutionUserRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class InstitutionUserRepository extends EntityRepository
{
    public function findActiveUserById($id)
    {
        return $this->findOneBy(array('accountId' => $id, 'status' => SiteUser::STATUS_ACTIVE));
    }
    
    public function findByInstitutionId(Institution $institution, $status=null)
    {
        if (!$institution->getId()) {
            throw new \Exception("Cannot find users of invalid institution.");
        }
        
        $criteria = array('institutionId' => $institutionId);
        if (!\is_null($status)) {
            $criteria['status'] = $status;
        }
        return $this->findBy($criteria); 
    }
    
    public function findByTypeName(Institution $institution, $userTypeName)
    {
        $query = $this->getEntityManager()->createQueryBuilder()
            ->select('u')
            ->from('UserBundle:InstitutionUser', 'u')
            ->join('u.institutionUserType', 't', Join::WITH, 't.name LIKE :userTypeName')
            ->where('u.institution = :institutionId')
            ->andWhere('u.status = :status')
            ->setParameter('userTypeName', '%'.$userTypeName.'%')
            ->setParameter('institutionId', $institution->getId())
            ->setParameter('status', SiteUser::STATUS_ACTIVE)
            ->getQuery();
        
        return $query->getResult();
    }
}